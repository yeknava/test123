{"version":3,"file":"static/webpack/static/development/pages/index.js.18183c7f6c97bf1543e7.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {connect} from 'react-redux'\nimport {addProduct, addAttribute} from '../store'\nimport axios from 'axios'\nimport NewInput from '../components/NewInput'\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\n\nclass Index extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        text: '',\n        atext: '',\n        error: '',\n        help: '',\n        selectedProduct: null\n    };\n  }\n\n  static async getInitialProps() {\n    // const res = await axios.get('http://localhost:8000/products')\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/products').then(res => {\n        if(res.data.length > 0) this.props.addProduct(res.data);\n    }).catch(err=> {\n\n    })\n  }\n\n  fetchProductAttrs(product) {\n      this.setState({selectedProduct: product});\n    axios.get('http://localhost:8000/products/'+product.id+'/attributes').then(res => {\n        this.props.addAttribute(res.data);\n    }).catch(err=> {\n\n    })\n  }\n\n  ulCreator(arr, clickHandler = () => {}) {\n      if(!arr.isArray()) return;\n      let list = [];\n      arr.map(l => {\n          console.log(l);\n          list.push(<li key={l.id} onClick={() => clickHandler(l)}>({l.id}) --- {l.name}</li>);\n      });\n      return list;\n  }\n\n  onChangeInputText(event) {\n    this.setState({text: event.target.value});\n  }\n\n  submitProduct() {\n    axios.post('http://localhost:8000/products', {\n        name: this.state.text\n    }).then(res => {\n        console.log(res);\n        if(res.data && res.data.err) this.setState({error: res.data.err, help: res.data.help_message});\n        else {\n            this.props.addProduct([res.data]);\n            this.setState({text: \"\", error: \"\", help: \"\"});\n        }\n    }).catch(err => {\n        console.log(err);\n        this.setState({error: \"خطا. لاگ رو بخون :'(\"});\n    })\n  }\n\n  submitAttr() {\n    axios.post('http://localhost:8000/products/'+this.state.selectedProduct.id+'/attributes', {\n        name: this.state.atext\n    }).then(res => {\n        console.log(res);\n        if(res.data && res.data.error) this.setState({error: res.data.error, help: res.data.help_message});\n        this.props.addAttribute(res.data);\n        this.setState({atext: \"\"});\n    }).catch(err => {\n        console.log(err);\n        this.setState({error: \"خطا. لاگ رو بخون :'(\"});\n    })\n  }\n\n  render() {\n    return (\n      <div style={{display:\"flex\", flexDirection: \"row\"}}>\n        <div style={{padding: 10}}>\n        <small>click on product to see attrs or add new one</small>\n        <p style={{color: \"red\"}}>{this.state.error}</p>\n        <p>{this.state.help}</p>\n        <ul>\n            <li><NewInput\n                btnText=\"submit new product\"\n                default={this.state.text}\n                onchange={this.onChangeInputText.bind(this)}\n                onclick={this.submitProduct.bind(this)}></NewInput></li>\n            {this.ulCreator(this.props.products, this.fetchProductAttrs.bind(this))}\n        </ul>\n        </div>\n        <div style={{padding: 10}}>\n            <h3>{this.state.selectedProduct && this.state.selectedProduct.name} attrs:</h3>\n            <ul>\n                <li><NewInput\n                    btnText=\"submit new attributes\"\n                    default={this.state.atext}\n                    onchange={this.onChangeInputText.bind(this)}\n                    onclick={this.submitAttr.bind(this)}></NewInput></li>\n                {this.ulCreator(this.props.attributes)}\n            </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n      products: state.products,\n      attributes: state.attributes\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addProduct: (products) => dispatch(addProduct(products)),\n        addAttribute: (attrs) => dispatch(addAttribute(attrs))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AAGA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;AA3GA;AACA;AA8GA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}